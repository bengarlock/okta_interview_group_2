{"ast":null,"code":"var _jsxFileName = \"/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Forms/CreateUserForm.js\",\n    _temp;\n\nimport React from 'react';\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst everyone = \"00g58yijoXDO7O43Z5d6\";\nconst administrators = \"00g5iptquShLgpDGn5d6\";\nexport default withOktaAuth((_temp = class CreateUserForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      login: '',\n      mobilePhone: '',\n      groups: [everyone],\n      button: false,\n      currentUser: null\n    };\n\n    this.onChangeHandler = e => {\n      if (e.target.name === \"firstName\") {\n        this.setState({\n          firstName: e.target.value\n        });\n      } else if (e.target.name === \"lastName\") {\n        this.setState({\n          lastName: e.target.value\n        });\n      } else if (e.target.name === \"email\") {\n        this.setState({\n          email: e.target.value\n        });\n      } else if (e.target.name === \"login\") {\n        this.setState({\n          login: e.target.value\n        });\n      } else if (e.target.name === \"mobilePhone\") {\n        this.setState({\n          mobilePhone: e.target.value\n        });\n      }\n    };\n\n    this.onClickHandler = e => {\n      let groups = [...this.state.groups];\n\n      if (this.state.groups.find(group => group === e.target.value)) {\n        groups = this.state.groups.filter(group => group !== e.target.value);\n        this.setState({\n          groups: groups,\n          button: false\n        });\n      } else {\n        this.setState({\n          groups: [...groups, e.target.value],\n          button: true\n        });\n      }\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      const data = {\n        profile: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          login: this.state.login\n        }\n      };\n      const packet = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(\"http://localhost:3000/okta_users\", packet).then(res => res.json()).then(console.log);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"create-user-header\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"firstName\",\n          value: this.state.firstName,\n          onChange: this.onChangeHandler,\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"lastName\",\n          value: this.state.lastName,\n          onChange: this.onChangeHandler,\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.onChangeHandler,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"login\",\n          value: this.state.login,\n          onChange: this.onChangeHandler,\n          placeholder: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          name: \"mobilePhone\",\n          value: this.state.mobilePhone,\n          onChange: this.onChangeHandler,\n          placeholder: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}, _temp));","map":{"version":3,"sources":["/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Forms/CreateUserForm.js"],"names":["React","withOktaAuth","everyone","administrators","CreateUserForm","Component","state","firstName","lastName","email","login","mobilePhone","groups","button","currentUser","onChangeHandler","e","target","name","setState","value","onClickHandler","find","group","filter","onSubmitHandler","preventDefault","data","profile","packet","method","headers","body","JSON","stringify","fetch","then","res","json","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withOktaAuth } from \"@okta/okta-react\";\n\nconst everyone = \"00g58yijoXDO7O43Z5d6\"\nconst administrators = \"00g5iptquShLgpDGn5d6\"\n\n\nexport default withOktaAuth(class CreateUserForm extends React.Component {\n\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        login: '',\n        mobilePhone: '',\n        groups: [everyone],\n        button: false,\n        currentUser: null\n    }\n\n    onChangeHandler = (e) => {\n        if (e.target.name === \"firstName\") {\n            this.setState({\n                firstName: e.target.value\n            })\n        } else if (e.target.name === \"lastName\") {\n            this.setState({\n                lastName: e.target.value\n            })\n        } else if (e.target.name === \"email\") {\n            this.setState({\n                email: e.target.value\n            })\n        } else if (e.target.name === \"login\") {\n            this.setState({\n                login: e.target.value\n            })\n        } else if (e.target.name === \"mobilePhone\") {\n            this.setState({\n                mobilePhone: e.target.value\n            })\n        }\n    }\n\n    onClickHandler = (e) => {\n        let groups = [...this.state.groups]\n        if (this.state.groups.find(group => group === e.target.value)) {\n            groups = this.state.groups.filter(group => group !== e.target.value)\n            this.setState({\n                groups: groups,\n                button: false\n            })\n        } else {\n            this.setState({\n                groups: [...groups, e.target.value],\n                button: true\n            })\n        }\n    }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault()\n        const data = {\n            profile: {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                login: this.state.login,\n            },\n        }\n\n        const packet = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        }\n\n        fetch(\"http://localhost:3000/okta_users\", packet)\n            .then(res => res.json())\n            .then(console.log)\n    }\n\n    render() {\n\n        return(\n            <>\n                <h3 id=\"create-user-header\">Create User</h3>\n\n                <form onSubmit={this.onSubmitHandler}>\n                    <input\n                        autoComplete='off'\n                        type=\"text\"\n                        name=\"firstName\"\n                        value={this.state.firstName}\n                        onChange={this.onChangeHandler}\n                        placeholder=\"First Name\" /><br />\n                    <input\n                        autoComplete='off'\n                        type=\"text\"\n                        name=\"lastName\"\n                        value={this.state.lastName}\n                        onChange={this.onChangeHandler}\n                        placeholder=\"Last Name\" /><br />\n                    <input\n                        autoComplete='off'\n                        type=\"text\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.onChangeHandler}\n                        placeholder=\"Email\" /><br />\n                    <input\n                        autoComplete='off'\n                        type=\"text\"\n                        name=\"login\"\n                        value={this.state.login}\n                        onChange={this.onChangeHandler}\n                        placeholder=\"Login\" /><br />\n                    <input\n                        autoComplete='off'\n                        type=\"text\"\n                        name=\"mobilePhone\"\n                        value={this.state.mobilePhone}\n                        onChange={this.onChangeHandler}\n                        placeholder=\"Phone\" /><br />\n                    <input type=\"submit\" value=\"submit\"/>\n\n                </form>\n            </>\n\n\n\n        )\n    }\n})\n\n"]},"metadata":{},"sourceType":"module"}