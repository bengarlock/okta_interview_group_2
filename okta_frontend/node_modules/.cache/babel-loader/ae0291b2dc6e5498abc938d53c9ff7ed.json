{"ast":null,"code":"var _jsxFileName = \"/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useOktaAuth } from '@okta/okta-react';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    authState,\n    authService\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  console.log(authState);\n  console.log(setUserInfo);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      authService.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, authService]); // Update if authState changes\n\n  const login = async () => {\n    authService.login('/');\n  };\n\n  if (authState.isPending) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Login, \"eMKyFH/quePE6R5hG3Fggf5j9NU=\", false, function () {\n  return [useOktaAuth];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Pages/Login.js"],"names":["useOktaAuth","React","useState","useEffect","Login","authState","authService","userInfo","setUserInfo","console","log","isAuthenticated","getUser","then","info","login","isPending"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BN,WAAW,EAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACE,SAAS,CAACM,eAAf,EAAgC;AAC5B;AACAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD,MAGO;AACHF,MAAAA,WAAW,CAACM,OAAZ,GAAsBC,IAAtB,CAA4BC,IAAD,IAAU;AACjCN,QAAAA,WAAW,CAACM,IAAD,CAAX;AACH,OAFD;AAGH;AACJ,GATQ,EASN,CAACT,SAAD,EAAYC,WAAZ,CATM,CAAT,CANgB,CAec;;AAE9B,QAAMS,KAAK,GAAG,YAAY;AACtBT,IAAAA,WAAW,CAACS,KAAZ,CAAkB,GAAlB;AACH,GAFD;;AAKA,MAAIV,SAAS,CAACW,SAAd,EAAyB;AACrB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAGD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CA/BD;;GAAMZ,K;UACiCJ,W;;;KADjCI,K;AAgCN,eAAeA,KAAf","sourcesContent":["import { useOktaAuth } from '@okta/okta-react';\nimport React, { useState, useEffect } from 'react';\n\n\nconst Login = () => {\n    const { authState, authService } = useOktaAuth();\n    const [userInfo, setUserInfo] = useState(null);\n    console.log(authState)\n    console.log(setUserInfo)\n\n    useEffect(() => {\n        if (!authState.isAuthenticated) {\n            // When user isn't authenticated, forget any user info\n            setUserInfo(null);\n        } else {\n            authService.getUser().then((info) => {\n                setUserInfo(info);\n            });\n        }\n    }, [authState, authService]); // Update if authState changes\n\n    const login = async () => {\n        authService.login('/');\n    };\n\n    \n    if (authState.isPending) {\n        return (\n            <div>Loading...</div>\n        );\n    }\n\n\n    return(<div>Hello</div>)\n\n};\nexport default Login;"]},"metadata":{},"sourceType":"module"}