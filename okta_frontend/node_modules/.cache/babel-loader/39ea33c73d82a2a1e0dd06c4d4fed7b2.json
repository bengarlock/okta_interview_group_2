{"ast":null,"code":"var _jsxFileName = \"/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Pages/Admin.js\",\n    _temp;\n\nimport React from 'react';\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport User from \"../Cards/User\";\nimport CreateUserForm from \"../Forms/CreateUserForm\";\nimport \"../Stylesheets/Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default withOktaAuth((_temp = class Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: null,\n      groups: null,\n      create_user_form: false\n    };\n\n    this.toggleCreateUserForm = () => {\n      this.setState({\n        create_user_form: !this.state.create_user_form\n      });\n    };\n\n    this.fetchGroups = async () => {\n      const packet = {\n        method: \"GET\",\n        headers: {\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      fetch(\"http://localhost:3000/okta_groups\", packet).then(res => res.json()).then(groups => this.setState({\n        groups: groups\n      }));\n    };\n\n    this.fetchUsers = async () => {\n      const packet = {\n        method: \"GET\",\n        headers: {\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      fetch(\"http://localhost:3000/okta_users\", packet).then(res => res.json()).then(users => this.setState({\n        users: users\n      }));\n    };\n\n    this.updateUsers = (user, group, method) => {\n      if (method === \"add-group\") {\n        let newUsers = [...this.state.users];\n        let updatedUser = newUsers.find(user => user.id === user.id);\n\n        if (updatedUser) {\n          let groups = [...updatedUser.groups, group];\n          updatedUser.groups = groups;\n          this.setState({\n            users: newUsers\n          });\n        }\n      } else if (method === \"delete-user\") {\n        let newUsers = [...this.state.users];\n        let newUsersSansUser = newUsers.filter(u => u.id !== user.id);\n        this.setState({\n          users: newUsersSansUser\n        });\n      } else if (method === \"create-user\") {\n        user.groups = group;\n        let newUsers = [...this.state.users, user];\n        this.setState({\n          users: newUsers\n        });\n      } else if (method === \"update-user\") {\n        let newUsers = [...this.state.users];\n        let updatedUser = newUsers.find(user => user.id === user.id);\n        updatedUser.firstName = user.profile.firstName;\n        updatedUser.lastName = user.profile.lastName;\n        updatedUser.email = user.profile.email;\n        updatedUser.login = user.profile.login;\n        updatedUser.mobilePhone = user.profile.mobilePhone;\n        console.log(updatedUser);\n        this.setState({\n          users: newUsers\n        });\n      }\n    };\n\n    this.renderUsers = () => {\n      return this.state.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        updateUsers: this.updateUsers,\n        user: user,\n        groups: this.state.groups,\n        backendUrl: this.props.backendUrl\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 46\n      }, this));\n    };\n\n    this.toggleMenu = () => {\n      this.setState({\n        create_user_form: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchGroups();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page-header\",\n        children: \"User Administration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-user-button\",\n        onClick: this.toggleCreateUserForm,\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), this.state.create_user_form ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-trigger-wrapper\",\n          onClick: this.toggleMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-user-form-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(CreateUserForm, {\n            toggleMenu: this.toggleMenu,\n            updateUser: this.updateUsers,\n            backendUrl: this.props.backendUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"content-header\",\n        children: \"Current Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: this.state.users ? this.renderUsers() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp));","map":{"version":3,"sources":["/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Pages/Admin.js"],"names":["React","withOktaAuth","User","CreateUserForm","Admin","Component","state","users","groups","create_user_form","toggleCreateUserForm","setState","fetchGroups","packet","method","headers","accept","fetch","then","res","json","fetchUsers","updateUsers","user","group","newUsers","updatedUser","find","id","newUsersSansUser","filter","u","firstName","profile","lastName","email","login","mobilePhone","console","log","renderUsers","map","props","backendUrl","toggleMenu","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {withOktaAuth} from \"@okta/okta-react\";\nimport User from \"../Cards/User\";\nimport CreateUserForm from \"../Forms/CreateUserForm\";\nimport \"../Stylesheets/Admin.css\"\n\n\n\nexport default withOktaAuth(class Admin extends React.Component{\n\n    state = {\n        users: null,\n        groups: null,\n        create_user_form: false,\n    }\n\n    componentDidMount() {\n        this.fetchUsers()\n        this.fetchGroups()\n    }\n\n    toggleCreateUserForm = () => {\n        this.setState({\n            create_user_form: !this.state.create_user_form\n        })\n    }\n\n    fetchGroups = async () => {\n\n        const packet = {\n            method: \"GET\",\n            headers: {\n                'content-type': 'application/json',\n                accept: 'application/json',\n            },\n        }\n        fetch(\"http://localhost:3000/okta_groups\", packet)\n            .then(res => res.json())\n            .then(groups => this.setState({groups: groups}))\n    }\n\n    fetchUsers = async () => {\n        const packet = {\n            method: \"GET\",\n            headers: {\n                'content-type': 'application/json',\n                accept: 'application/json',\n            },\n        }\n        fetch(\"http://localhost:3000/okta_users\", packet)\n            .then(res => res.json())\n            .then(users => this.setState({users: users}))\n    }\n\n    updateUsers = (user, group, method) => {\n\n        if (method === \"add-group\") {\n            let newUsers = [...this.state.users]\n            let updatedUser = newUsers.find(user => user.id === user.id)\n\n            if (updatedUser) {\n                let groups = [...updatedUser.groups, group]\n                updatedUser.groups = groups\n                this.setState({\n                    users: newUsers\n                })\n            }\n        } else if (method === \"delete-user\") {\n            let newUsers = [...this.state.users]\n            let newUsersSansUser = newUsers.filter(u => u.id !== user.id)\n            this.setState({\n                users: newUsersSansUser\n            })\n        } else if (method === \"create-user\") {\n            user.groups = group\n            let newUsers = [...this.state.users, user]\n            this.setState({\n                users: newUsers\n            })\n        } else if (method === \"update-user\") {\n            let newUsers = [...this.state.users]\n            let updatedUser = newUsers.find(user => user.id === user.id)\n            updatedUser.firstName = user.profile.firstName\n            updatedUser.lastName = user.profile.lastName\n            updatedUser.email = user.profile.email\n            updatedUser.login = user.profile.login\n            updatedUser.mobilePhone = user.profile.mobilePhone\n      \n            console.log(updatedUser)\n            this.setState({\n                users: newUsers\n            })\n        }\n    }\n\n    renderUsers = () => {\n        return this.state.users.map( user => <User\n            updateUsers={this.updateUsers}\n            key={user.id}\n            user={user}\n            groups={this.state.groups}\n            backendUrl={this.props.backendUrl} />)\n    }\n\n    toggleMenu = () => {\n        this.setState({\n            create_user_form: false\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <h3 className=\"page-header\">User Administration</h3>\n\n                <div className=\"create-user-button\" onClick={this.toggleCreateUserForm}>Create User</div>\n                {this.state.create_user_form ? (\n                    <>\n                        <div className=\"menu-trigger-wrapper\" onClick={this.toggleMenu}></div>\n                        <div className=\"create-user-form-wrapper\">\n                            <CreateUserForm\n                                toggleMenu={this.toggleMenu}\n                                updateUser={this.updateUsers}\n                                backendUrl={this.props.backendUrl}\n                            />\n                        </div>\n                    </>\n\n                )\n                    : null\n                }\n                <h2 className=\"content-header\">Current Users</h2>\n                <div className=\"container\">\n                        {this.state.users ? this.renderUsers() : null}\n                 </div>\n            </div>\n\n\n        )\n    }\n})\n\n"]},"metadata":{},"sourceType":"module"}