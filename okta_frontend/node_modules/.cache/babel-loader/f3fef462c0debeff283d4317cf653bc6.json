{"ast":null,"code":"var _jsxFileName = \"/Users/bengarlock/RubymineProjects/okta_interview_group2_challenge/okta_frontend/src/Components/Cards/GroupButton.js\",\n    _temp;\n\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport React from \"react\";\nimport \"../Stylesheets/GroupButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default withOktaAuth((_temp = class GroupButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: ''\n    };\n\n    this.checkStyle = () => {\n      const userGroupIds = this.props.user.groups.map(group => group.id);\n\n      if (userGroupIds.includes(this.props.group.id)) {\n        this.setState({\n          clicked: true\n        });\n      } else {\n        this.setState({\n          clicked: false\n        });\n      }\n    };\n\n    this.onClickHandler = e => {\n      const payload = {\n        user_id: this.props.user.id\n      };\n      const packet = {\n        method: \"PUT\",\n        headers: {\n          \"Accept\": \"Application/json\",\n          \"Content-type\": \"Application/json\"\n        },\n        body: JSON.stringify(payload)\n      };\n      this.setState({\n        clicked: !this.state.clicked\n      }, () => {\n        fetch(\"http://127.0.0.1:3000/okta_groups/\" + this.props.group.id, packet).then(res => res.json()).then(() => this.props.updateUsers(this.props.user, this.props.group, \"toggle-group\"));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.checkStyle();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.group.profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        name: this.props.group.profile.name,\n        onClick: this.onClickHandler,\n        id: this.props.group.id,\n        className: this.state.clicked ? \"clicked\" : \"not-clicked\",\n        children: this.props.group.profile.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false);\n  }\n\n}, _temp));","map":{"version":3,"sources":["/Users/bengarlock/RubymineProjects/okta_interview_group2_challenge/okta_frontend/src/Components/Cards/GroupButton.js"],"names":["withOktaAuth","React","GroupButton","Component","state","clicked","checkStyle","userGroupIds","props","user","groups","map","group","id","includes","setState","onClickHandler","e","payload","user_id","packet","method","headers","body","JSON","stringify","fetch","then","res","json","updateUsers","componentDidMount","render","profile","name"],"mappings":";;;AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gCAAP;;;AAEA,eAAeD,YAAY,UAAC,MAAME,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAElEC,KAFkE,GAE1D;AACJC,MAAAA,OAAO,EAAE;AADL,KAF0D;;AAAA,SAUlEC,UAVkE,GAUrD,MAAM;AAEf,YAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuBC,GAAvB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,EAA1C,CAArB;;AACA,UAAIN,YAAY,CAACO,QAAb,CAAsB,KAAKN,KAAL,CAAWI,KAAX,CAAiBC,EAAvC,CAAJ,EAAgD;AAC5C,aAAKE,QAAL,CAAc;AACVV,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH,OAJD,MAIO;AACH,aAAKU,QAAL,CAAc;AACVV,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH;AACJ,KAtBiE;;AAAA,SAwBlEW,cAxBkE,GAwBhDC,CAAD,IAAM;AACnB,YAAMC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,IAAX,CAAgBI;AADb,OAAhB;AAIA,YAAMO,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE,KADG;AAEXC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFE;AAMXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AANK,OAAf;AASA,WAAKH,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADX,OAAd,EAEG,MAAM;AACLqB,QAAAA,KAAK,CAAC,uCAAuC,KAAKlB,KAAL,CAAWI,KAAX,CAAiBC,EAAzD,EAA6DO,MAA7D,CAAL,CACKO,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEU,MAAM,KAAKnB,KAAL,CAAWsB,WAAX,CAAuB,KAAKtB,KAAL,CAAWC,IAAlC,EAAwC,KAAKD,KAAL,CAAWI,KAAnD,EAA0D,cAA1D,CAFhB;AAGH,OAND;AAOH,KA7CiE;AAAA;;AAMlEmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKzB,UAAL;AACH;;AAwCD0B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKxB,KAAL,CAAWI,KAAX,CAAiBqB,OAAjB,gBACG;AACI,QAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWI,KAAX,CAAiBqB,OAAjB,CAAyBC,IADnC;AAEI,QAAA,OAAO,EAAE,KAAKlB,cAFlB;AAGI,QAAA,EAAE,EAAE,KAAKR,KAAL,CAAWI,KAAX,CAAiBC,EAHzB;AAII,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC,aAJhD;AAAA,kBAKK,KAAKG,KAAL,CAAWI,KAAX,CAAiBqB,OAAjB,CAAyBC;AAL9B;AAAA;AAAA;AAAA;AAAA,cADH,GASG;AAVR,qBADJ;AAeH;;AAhEiE,CAA3C,SAA3B","sourcesContent":["import {withOktaAuth} from \"@okta/okta-react\";\nimport React from \"react\";\nimport \"../Stylesheets/GroupButton.css\"\n\nexport default withOktaAuth(class GroupButton extends React.Component {\n\n    state = {\n        clicked: ''\n    }\n\n    componentDidMount() {\n        this.checkStyle()\n    }\n\n    checkStyle = () => {\n\n        const userGroupIds = this.props.user.groups.map(group => group.id)\n        if (userGroupIds.includes(this.props.group.id)) {\n            this.setState({\n                clicked: true\n            })\n        } else {\n            this.setState({\n                clicked: false\n            })\n        }\n    }\n\n    onClickHandler = (e) =>{\n        const payload = {\n            user_id: this.props.user.id\n        }\n\n        const packet = {\n            method: \"PUT\",\n            headers: {\n                \"Accept\": \"Application/json\",\n                \"Content-type\": \"Application/json\",\n            },\n            body: JSON.stringify(payload)\n        }\n\n        this.setState({\n            clicked: !this.state.clicked\n        }, () => {\n            fetch(\"http://127.0.0.1:3000/okta_groups/\" + this.props.group.id, packet)\n                .then(res => res.json())\n                .then(() => this.props.updateUsers(this.props.user, this.props.group, \"toggle-group\"))\n        })\n    }\n\n\n    render() {\n        return (\n            <>\n                {this.props.group.profile ? (\n                    <div\n                        name={this.props.group.profile.name}\n                        onClick={this.onClickHandler}\n                        id={this.props.group.id}\n                        className={this.state.clicked ? \"clicked\" : \"not-clicked\"}>\n                        {this.props.group.profile.name}\n                    </div>\n\n                ) : null}\n\n            </>\n        )\n    }\n})"]},"metadata":{},"sourceType":"module"}