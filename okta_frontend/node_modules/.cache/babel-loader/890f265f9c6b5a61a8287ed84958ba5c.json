{"ast":null,"code":"var _jsxFileName = \"/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Pages/Login.js\",\n    _temp;\n\nimport { withOktaAuth } from '@okta/okta-react';\nimport React from 'react';\nimport SignInWidget from \"../Widgets/SignInWidget\";\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default withOktaAuth((_temp = class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authenticated: null\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        authenticated: this.props.authState.isAuthenticated\n      });\n    };\n\n    this.checkAuthentication = () => {\n      const isLoggedIn = this.props.authState.isAuthenticated;\n      this.setState({\n        authenticated: this.props.authState.isAuthenticated\n      });\n    };\n\n    this.onError = err => {\n      console.log('error logging in', err);\n    };\n  }\n\n  componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  render() {\n    if (this.state.authenticated === null) return null;\n    return this.state.authenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(SignInWidget, {\n      baseUrl: this.props.baseUrl,\n      onSuccess: this.onSuccess,\n      onError: this.onError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  }\n\n}, _temp));","map":{"version":3,"sources":["/Users/bengarlock/Desktop/okta-interview-prep/src/Components/Pages/Login.js"],"names":["withOktaAuth","React","SignInWidget","Redirect","Login","Component","state","authenticated","componentDidMount","setState","props","authState","isAuthenticated","checkAuthentication","isLoggedIn","onError","err","console","log","componentDidUpdate","render","pathname","baseUrl","onSuccess"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAGA,eAAeH,YAAY,UAAC,MAAMI,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAE5DC,KAF4D,GAEpD;AACJC,MAAAA,aAAa,EAAE;AADX,KAFoD;;AAAA,SAM5DC,iBAN4D,GAMxC,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVF,QAAAA,aAAa,EAAE,KAAKG,KAAL,CAAWC,SAAX,CAAqBC;AAD1B,OAAd;AAGH,KAV2D;;AAAA,SAY5DC,mBAZ4D,GAYtC,MAAM;AACxB,YAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqBC,eAAxC;AACA,WAAKH,QAAL,CAAc;AACVF,QAAAA,aAAa,EAAE,KAAKG,KAAL,CAAWC,SAAX,CAAqBC;AAD1B,OAAd;AAGH,KAjB2D;;AAAA,SAuB5DG,OAvB4D,GAuBlDC,GAAG,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACH,KAzB2D;AAAA;;AAmB5DG,EAAAA,kBAAkB,GAAG;AACjB,SAAKN,mBAAL;AACH;;AAMDO,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKd,KAAL,CAAWC,aAAX,KAA6B,IAAjC,EAAuC,OAAO,IAAP;AAEvC,WAAO,KAAKD,KAAL,CAAWC,aAAX,gBACH,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEc,QAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,YADG,gBAGC,QAAC,YAAD;AACI,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OADxB;AAEI,MAAA,SAAS,EAAE,KAAKC,SAFpB;AAGI,MAAA,OAAO,EAAE,KAAKR;AAHlB;AAAA;AAAA;AAAA;AAAA,YAHR;AAUH;;AAxC2D,CAArC,SAA3B","sourcesContent":["import { withOktaAuth } from '@okta/okta-react';\nimport React from 'react';\nimport SignInWidget from \"../Widgets/SignInWidget\";\nimport { Redirect } from 'react-router-dom';\n\n\nexport default withOktaAuth(class Login extends React.Component {\n\n    state = {\n        authenticated: null\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            authenticated: this.props.authState.isAuthenticated\n        })\n    }\n\n    checkAuthentication = () => {\n        const isLoggedIn = this.props.authState.isAuthenticated\n        this.setState({\n            authenticated: this.props.authState.isAuthenticated\n        })\n    }\n\n    componentDidUpdate() {\n        this.checkAuthentication();\n    }\n\n    onError = err => {\n        console.log('error logging in', err);\n    };\n\n    render() {\n        if (this.state.authenticated === null) return null;\n\n        return this.state.authenticated ? (\n            <Redirect to={{ pathname: '/' }} />\n            ) : (\n                <SignInWidget\n                    baseUrl={this.props.baseUrl}\n                    onSuccess={this.onSuccess}\n                    onError={this.onError}\n                />\n                );\n\n    }\n\n})\n\n\n\n"]},"metadata":{},"sourceType":"module"}